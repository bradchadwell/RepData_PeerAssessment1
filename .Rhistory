fit3 <- lm(mpg ~ wt, data=mtcars)
# see lecture notes 01_07 slide 13/14
meanwt <- mean(mtcars$wt)
predict(fit3, newdata = meanwt, interval = ("confidence"))
summary(fit3)
predict(fit3, newdata = 3.21725, interval = ("confidence"))
predict(fit3, newdata = data.frame(wt = mean(mtcars$wt)), interval = ("confidence"))
?mtcars
data(mtcars)
fit3 <- lm(mpg ~ wt, data=mtcars)
newcar.wt <- 3000/1000
predict(fit3, newdata = data.frame(wt = newcar.wt), interval = ("prediction"))
fit6 <- lm(mpg ~ wt/2, data=mtcars)
fit6 <- lm(mpg ~ I(wt/2), data=mtcars)
fit6
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit6$df)*sumCoef[2,2]
x<-mtcars$wt/2
y<-mtcars$mpg
fit6a<-lm(y~x)
sumCoef2<-summary(fit6a)$coefficients
sumCoef2[2,1]+c(-1,1)*qt(.975,df=fit6a$df)*sumCoef2[2,2]
mtcars$wtst <- mtcars$wt/2
fit6 <- lm(mpg ~ I(wt/2), data=mtcars)
sumCoef<-summary(fit6)$coefficients
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit6$df)*sumCoef[2,2]
fit6 <- lm(mpg ~ I(wt/2), data=mtcars)
sumCoef<-summary(fit6)$coefficients
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit6$df)*sumCoef[2,2]
fit6 <- lm(mpg ~ I(wt/2), data=mtcars)
sumCoef<-summary(fit6)$coefficients
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit6$df)*sumCoef[2,2]
data(mtcars)
fit6 <- lm(mpg ~ I(wt/2), data=mtcars)
sumCoef<-summary(fit6)$coefficients
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit6$df)*sumCoef[2,2]
sumCoef
data(mtcars)
fit9m <- lm(mpg ~ wt - 1, data=mtcars)
fit9mb <- lm(mpg ~ wt, data=mtcars)
sse9m <- sum(resid(fit9m)^2)
sse9mb <-sum(resid(fit9mb)^2)
ratio <- sse9mb/sse9m
ratio
resid(fit9m)
resid(fit9m)^2
sum(resid(fit9m))
sum(resid(fit9m)^2)
sum(resid(fit9m))^2
sum(resid(fit9mb)^2)
summary(fit9m)
summary(fit9mb)
sse9m2 <- sum((mtcars$mpg - mean(mtcars$mpg)) ^ 2)
sse9m2
ratio2 <- sse9mb/sse9m2
ratio2
data(mtcars)
fit9mb <- lm(mpg ~ wt, data=mtcars)
fit9m <- lm(mpg ~ wt - 1, data=mtcars)
sse9mb <-sum(resid(fit9mb)^2)
sse9m <- sum(resid(fit9m)^2) #not sure of this
ratio <- sse9mb/sse9m
ratio
# manually calculate residuals for intecept only (Yi - Y_bar)
sse9m2 <- sum((mtcars$mpg - mean(mtcars$mpg)) ^ 2)
ratio2 <- sse9mb/sse9m2
ratio2
source('~/Coursera/regmods/quiz3.R', echo=TRUE)
summary(fit1)
summary(fit1)$coefficients
fit1 <- lm(mpg ~ factor(cyl) + wt - 1, data=mtcars)
summary(fit1)$coefficients
summary(fit1)$coefficients[3,1]-summary(fit1)$coefficients[1,1]
fit1a <- lm(mpg ~ factor(cyl) + wt, data=mtcars) # with intercept
summary(fit1a)$coefficients
summary(fit1a)$coefficients["factor(cyl)8",1]
fit2wt <- lm(mpg ~ factor(cyl) + wt - 1, data=mtcars) # no intercept
summary(fit2wt)$coefficients
fit2nowt <- lm(mpg ~ factor(cyl) - 1, data=mtcars) # no intercept
summary(fit2nowt)$coefficients
fit2wt <- lm(mpg ~ factor(cyl) + wt, data=mtcars)
summary(fit2wt)$coefficients
fit2nowt <- lm(mpg ~ factor(cyl), data=mtcars)
summary(fit2nowt)$coefficients
]
fit2nowt$coefficients["factor(cyl)8",1]
fit2wt$coefficients["factor(cyl)8",1]
fit2nowt$coefficients["factor(cyl)8",1]
summary(fit2wt)$coefficients["factor(cyl)8",1]
summary(fit2nowt)$coefficients["factor(cyl)8",1]
fit3 <- lm(mpg ~ factor(cyl) + wt, data=mtcars)
fit3int <- lm(mpg ~ factor(cyl) * wt, data=mtcars)
anova(fit3,fit3int)
result<-anova(fit3,fit3int)
result
result[,1]
result[,2]
result[,3]
result[,4]
result[,5]
result[,6]
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
fit4 <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y ~ x)
hatvalues(fit5)
max(hatvalues(fit5))
lm.influence(fit5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6 <- lm(y ~ x)
dfbeta(fit6)
dfbetas(fit6)
hatvalues(fit6)
dfbetas(fit6)[5,2]
library(MASS)
data(shuttle)
?shuttle
shuttle
str(shuttle)
logreg <- glm(shuttle$use ~ shuttle$wind, family = "binomial")
summary(logreg)
shuttle$usebin<-as.numeric(shuttle$use == "auto")
logreg <- glm(use ~ factor(wind), family = "binomial", data = shuttle)
coef(logreg)
logreg <- glm(usebin ~ factor(wind), family = "binomial", data = shuttle)
coef(logreg)
exp(coef(logreg))
coef(summary(logreg))
coef(logreg)$odds
coef(summary(logreg))$odds
coef(logreg).odds
logreg.odds
coef(logreg)
logreg$coefficients
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle)
summary(logreg)
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsratio <- logreg["factor(wind)head",1]/logreg["factor(wind)tail",1]
oddsratio
oddsratio <- logreg["factor(wind)head"]/logreg["factor(wind)tail"]
oddsratio <- logreg["factor(wind)head"]$coef / logreg["factor(wind)tail"]$coef
oddsratio
logreg["factor(wind)head"]$coef
logreg["factor(wind)head"]$coeff
logreg
oddsheads <- summary(logreg)$coefficients["factor(wind)head",1]
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads <- summary(logreg)$coefficients["factor(wind)head",1]
oddstails <- summary(logreg)$coefficients["factor(wind)head",1]
oddsratio <- oddsheads / oddstails
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads <- summary(logreg)$coefficients["factor(wind)head",1]
oddstails <- summary(logreg)$coefficients["factor(wind)tail",1]
oddsratio <- oddsheads / oddstails
oddsratio
summary(logreg)$coefficients["factor(wind)head",1]
Coef <- coef(summary(fit))
coef.odds <- exp(c(Coef[1, 1], Coef[2, 1]))
(odds.ratio <- coef.odds[1] / coef.odds[2])
Coef <- coef(summary(logreg))
coef.odds <- exp(c(Coef[1, 1], Coef[2, 1]))
(odds.ratio <- coef.odds[1] / coef.odds[2])
1/odds.ratio
coef.odds
Coef
Coef[1, 1]
Coef[2, 1]
Coef[1, 1]/Coef[2,1]
exp(c(Coef[1, 1], Coef[2, 1]))
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads <- exp(summary(logreg)$coefficients["factor(wind)head",1])
oddstails <- exp(summary(logreg)$coefficients["factor(wind)tail",1])
oddsratio <- oddsheads / oddstails
oddsratio
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads <- exp(summary(logreg)$coefficients["factor(wind)head",1])
oddstails <- exp(summary(logreg)$coefficients["factor(wind)tail",1])
oddsratio <- oddsheads / oddstails
exp(coef(logreg))
View(Coef)
windcoef <- coef(logreg)
expwindcoef <-exp(windcoef)
str(expwindcoef)
expwindcoef[1]/expwindcoef[2]
expwindcoef[2]/expwindcoef[1]
shuttle$usebin<-as.numeric(shuttle$use == "auto")
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
coefs <- coef(logreg)
odds <-exp(windcoef)
odds.ratio <- coefs[2]/coefs[1]
odds.ratio <- coefs[1]/coefs[2]
logreg <- glm(use ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
coefs <- coef(logreg)
odds <-exp(windcoef)
odds.ratio <- coefs[1]/coefs[2]
logreg <- glm(usebin ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads <- exp(summary(logreg)$coefficients["factor(wind)head",1])
oddstails <- exp(summary(logreg)$coefficients["factor(wind)tail",1])
oddsratio <- oddsheads / oddstails
oddsratio
logreg2 <- glm(usebin ~ factor(wind) + factor(magn) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads2 <- exp(summary(logreg2)$coefficients["factor(wind)head",1])
oddstails2 <- exp(summary(logreg2)$coefficients["factor(wind)tail",1])
oddsratio2 <- oddsheads2 / oddstails2
oddsratio2
logreg3a <- glm((1-usebin) ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3a <- exp(summary(logreg3a)$coefficients["factor(wind)head",1])
oddstails3a <- exp(summary(logreg3a)$coefficients["factor(wind)tail",1])
oddsratio3a <- oddsheads3a / oddstails3a
oddsratio3a
logreg3 <- glm(usebin ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3 <- exp(summary(logreg3)$coefficients["factor(wind)head",1])
oddstails3 <- exp(summary(logreg3)$coefficients["factor(wind)tail",1])
oddsratio3 <- oddsheads3 / oddstails3
oddsratio3
oddsratio3*oddsratio3a
logreg3a <- glm(I(1-usebin) ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3a <- exp(summary(logreg3a)$coefficients["factor(wind)head",1])
oddstails3a <- exp(summary(logreg3a)$coefficients["factor(wind)tail",1])
oddsratio3a <- oddsheads3a / oddstails3a
oddsratio3a
data("InsectSprays")
str(InsectSprays)
fit4 <- glm(count ~ factor(spray) -1, family = "poisson", data = InsectSprays)
summary(fit4)
rates <- exp(coef(fit4))
rates
rates[$A]
rates$A
rates~A
rates["A"]
rates[1]
relrate <- rates[1]/rates[2]
relrate
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1,x,splineTerms)
fit6 <- lm(y ~ xMat - 1)
summary(fit6)
plot(y~x)
fit6a <- lm(y[6:]~x[6:])
fit6a <- lm(y[6:11]~x[6:11])
summary(fit6a)
fit6a <- lm(y[6:11]~x[6:11]-1)
summary(fit6a)
d1 <- c(0, 0 ,0, 0, 0,  0,  1 , 1,  1 , 1 , 1)
d2 <- c(1, 1 ,1, 1, 1,  1,  0 , 0,  0, 0 , 0)
# y = c + d1 * x + d2 * x
summary(lm(y ~ d1*x))
summary(lm(y ~ d1*x + d2*x))
coef(fit6a)
fit6a <- lm(y[7:11]~x[7:11]-1)
coef(fit6a)
x[7:11]
y[7:11]
fit6a <- lm(y[7:11]~x[7:11])
coef(fit6a)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
View(splineTerms)
View(splineTerms)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splineTerms <- sapply(knots, function(knot) (x >= knot) * (x - knot))
xMat <- cbind(1,x,splineTerms)
fit6 <- lm(y ~ xMat)
coef(fit6)
fit6a <- lm(y[6:11]~x[6:11])
coef(fit6a)
View(xMat)
View(xMat)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splineTerms <- sapply(knots, function(knot) (x >= knot) * (x - knot))
xMat <- cbind(x,splineTerms)
fit6 <- lm(y ~ xMat)
coef(fit6)
coef(fit6)[2]+coef(fit6)[3]
logreg3 <- glm(usebin ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3 <- exp(summary(logreg3)$coefficients["factor(wind)head",1])
oddstails3 <- exp(summary(logreg3)$coefficients["factor(wind)tail",1])
oddsheads3
oddstails3
logreg3a <- glm(I(1-usebin) ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3a <- exp(summary(logreg3a)$coefficients["factor(wind)head",1])
oddstails3a <- exp(summary(logreg3a)$coefficients["factor(wind)tail",1])
oddsheads3a
oddstails3a
data(shuttle)
str(shuttle)
# make a binary variable for use with "auto" as 1
shuttle$usebin<-as.numeric(shuttle$use == "auto")
logreg3 <- glm(usebin ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3 <- exp(summary(logreg3)$coefficients["factor(wind)head",1])
oddstails3 <- exp(summary(logreg3)$coefficients["factor(wind)tail",1])
oddsheads3
oddstails3
logreg3a <- glm(I(1-usebin) ~ factor(wind) - 1, family = "binomial", data = shuttle) #no intercept
oddsheads3a <- exp(summary(logreg3a)$coefficients["factor(wind)head",1])
oddstails3a <- exp(summary(logreg3a)$coefficients["factor(wind)tail",1])
oddsheads3a
oddstails3a
coef(logreg3)
coef(logreg3a)
logreg3 <- glm(usebin ~ factor(wind), family = "binomial", data = shuttle) #no intercept
logreg3a <- glm(I(1-usebin) ~ factor(wind), family = "binomial", data = shuttle) #no intercept
coef(logreg3)
coef(logreg3a)
setwd("~/Coursera/repdata/RepData_PeerAssessment1")
fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
zipfileName <-"activity.zip"; datafileName <- "activity.csv"
if(!file.exists(zipfileName)){download.file(fileUrl, destfile = zipfileName, method = "curl")}
if(!file.exists(datafileName)){unz(zipfileName, datafileName)}
dat <- read.csv(datafileName, header = TRUE)
str(dat)
temp <- paste(dat$date,formatC(dat$interval, flag="0", width=4))
dat$DateTime <- strptime(temp,"%Y-%m-%d %H%M")
str(dat)
totalstepsbyday <- sapply(split(dat$steps, dat$date), sum, na.rm = TRUE)
totalstepsbyday
summary(totalstepsbyday)
head(totalstepsbyday)
View(dat)
dat2 <- dat[!is.na(dat),]
str(dat2)
totalstepsbyday <- sapply(split(dat2$steps, dat2$date), sum)
hist(totalstepsbyday, breaks = 30,
main = "Total Steps Taken Each Day",
xlab = "Steps",
col = "red")
step.mean <- mean(totalstepsbyday)
step.median <- median(totalstepsbyday)
step.mean
step.median
totalstepsbyday
length(is.na(dat$steps))
sum(is.na(dat$steps))
24*12
dat2 <- dat[!is.na(dat$steps),]
str(dat2)
totalstepsbyday <- sapply(split(dat2$steps, dat2$date), sum)
hist(totalstepsbyday, breaks = 30,
main = "Total Steps Taken Each Day",
xlab = "Steps",
col = "red")
totalstepsbyday
dat2 <- dat[complete.cases(dat$steps),]
str(dat2)
totalstepsbyday <- sapply(split(dat2$steps, dat2$date), sum)
hist(totalstepsbyday, breaks = 30,
main = "Total Steps Taken Each Day",
xlab = "Steps",
col = "red")
step.mean <- mean(totalstepsbyday)
step.median <- median(totalstepsbyday)
step.mean
step.median
totalstepsbyday
dat2 <- dat[complete.cases(dat),]
complete.cases(dat)
complete.cases(dat)
dat3<-complete.cases(dat)
complete.cases(dat[,])
sum(is.na(dat$DateTime))
sum(is.na(dat$Date))
sum(is.na(dat$interval))
sum(is.na(dat$steps))
dat2 <- dat[!is.na(dat$steps),]
str(dat2)
stepsbyday <- aggregate(dat, by = date, FUN = sum)
stepsbyday <- aggregate(steps ~ date, dat, sum)
stepsbyday
stepsbyday <- aggregate(steps ~ date, dat, sum, na.action = na.omit)
stepsbyday
head(stepsbyday,5)
stepsbydate <- aggregate(steps ~ date, dat, sum, na.action = na.omit)
head(stepsbydate,5)
hist(stepsbydate, breaks = 30,
main = "Total Steps Taken Each Day",
xlab = "Steps",
col = "red")
hist(stepsbydate$steps, breaks = 30,
main = "Total Steps Taken Each Day",
xlab = "Steps",
col = "red")
step.mean <- mean(stepsbydate$steps)
step.median <- median(stepsbydate$steps)
step.mean
step.median
stepsbyinterval <- aggregate(steps ~ interval, dat, sum, na.action = na.omit)
stepsbyinterval
stepsbyinterval <- aggregate(steps ~ interval, dat, mean, na.action = na.omit)
# Plot
stepsbyinterval
plot(
x = stepsbyinterval$interval,
y = stepsbyinterval$steps,
type = "l",
main = "Time Series Plot of the 5-Minute Interval\n versus the Average Number of Steps Taken, Averaged Across All Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken,\n Averaged Across All Days"
)
plot(
x = stepsbyinterval$interval,
y = stepsbyinterval$steps,
type = "l",
main = "Time Series Plot of\n the 5-Minute Interval\n versus the Average Number of Steps Taken, Averaged Across All Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken,\n Averaged Across All Days"
)
main = "Time Series Plot of the 5-Minute Interval\n versus the Average Number of Steps Taken, Averaged Across All Days",
plot(
x = stepsbyinterval$interval,
y = stepsbyinterval$steps,
type = "l",
main = "Time Series Plot of the 5-Minute Interval\n versus the Average Number of Steps Taken, Averaged Across All Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken,\n Averaged Across All Days"
)
plot(
x = stepsbyinterval$interval,
y = stepsbyinterval$steps,
type = "l",
main = "Time Series Plot of the the Average Number of Steps Taken, Averaged Across All Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken,\n Averaged Across All Days"
)
lot(
x = stepsbyinterval$interval,
y = stepsbyinterval$steps,
type = "l",
main = "Time Series Plot of the the Average Number of Steps Taken,\n Averaged Across All Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken,\n Averaged Across All Days"
)
plot(
x = stepsbyinterval$interval,
y = stepsbyinterval$steps,
type = "l",
main = "Time Series Plot of the the Average Number of Steps Taken, \n Averaged Across All Days",
xlab = "5-Minute Interval",
ylab = "Average Number of Steps Taken,\n Averaged Across All Days"
)
stepsbyinterval[stepsbyinterval$steps==max(stepsbyinterval$steps),interval]
stepsbyinterval[stepsbyinterval$steps==max(stepsbyinterval$steps),"steps"]
stepsbyinterval[stepsbyinterval$steps==max(stepsbyinterval$steps),"interval"]
paste("Maximum number of steps of ", round(maxsteps,2), " occurs in 5-minute interval ", maxinterval)
paste("Maximum number of steps (averaged across days) of ", round(maxsteps,digits=2),
" occurs in 5-minute interval ", maxinterval)
maxinterval <- stepsbyinterval[stepsbyinterval$steps==max(stepsbyinterval$steps),"interval"]
maxsteps <- stepsbyinterval[stepsbyinterval$steps==max(stepsbyinterval$steps),"steps"]
paste("Maximum number of steps (averaged across days) of ", round(maxsteps,digits=2),
" occurs in 5-minute interval ", maxinterval)
sum(is.na(dat$steps))
sum(!complete.cases(dat))
sum(!complete.cases(dat[1:3,]))
sum(!complete.cases(dat[,1:3]))
length(dat)
length(dat$steps)
length(dat$interval)
length(dat$date)
length(dat$DateTime)
dat$Time <- strptime(formatC(dat$interval, flag="0", width=4),"%H%M")
dat <- read.csv(datafileName, header = TRUE)
merged <- merge(dat, stepsbyinterval, by = "interval", suffixes = c("",".avg"))
merged[narows,"steps"] <- merged[narows,"steps.avg"]
narows <- is.na(dat$steps)
merged[narows,"steps"] <- merged[narows,"steps.avg"]
sum(is.na(dat2$steps))
names(dat2)
names(merged)
names(dat)
dat$DateTime <- strptime(temp,"%Y-%m-%d %H%M")
narows <- is.na(dat$steps)
merged <- merge(dat, stepsbyinterval, by = "interval", suffixes = c("",".avg"))
merged[narows,"steps"] <- merged[narows,"steps.avg"]
names(dat)
names(merged)
dat2 <- merged[,names(dat)]
names(dat2)
merged[narows,"steps"] <- as.integer(merged[narows,"steps.avg"])
dat2 <- merged[,names(dat)]
merged <- merge(dat, stepsbyinterval, by = "interval", suffixes = c("",".avg"))
dat2<-null
unclass(dat2)
source('~/.active-rstudio-document', echo=TRUE)
merged <- merge(dat, stepsbyinterval, by = "interval", suffixes = c("",".avg"), sort = FALSE)
merged[narows,"steps"] <- as.integer(merged[narows,"steps.avg"])
dat2 <- merged[,names(dat)]
str(dat2)
hist(stepsbydate2$steps, breaks = 30,
main = "Total Steps Taken Each Day (With Filled Data)",
xlab = "Steps",
col = "blue")
hist(stepsbydate$steps, breaks = 30,
main = "Total Steps Taken Each Day (Orig Data)",
xlab = "Steps",
col = "red")
source('~/.active-rstudio-document', echo=TRUE)
stepsbydate2
stepsbydate
sidebyside <- merge(stepsbydate,stepsbydate2, by "date")
sidebyside <- merge(stepsbydate,stepsbydate2, by = "date")
sidebyside
